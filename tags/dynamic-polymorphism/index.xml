<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Dynamic-Polymorphism on Vishal Chovatiya</title>
    <link>https://vishalchovatiya.github.io/tags/dynamic-polymorphism/</link>
    <description>Recent content in Dynamic-Polymorphism on Vishal Chovatiya</description>
    <image>
      <title>Vishal Chovatiya</title>
      <url>https://vishalchovatiya.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://vishalchovatiya.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.128.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vishalchovatiya.github.io/tags/dynamic-polymorphism/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CRTP C&#43;&#43; Examples</title>
      <link>https://vishalchovatiya.github.io/posts/crtp-c-examples/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://vishalchovatiya.github.io/posts/crtp-c-examples/</guid>
      <description>Curiously Recurring Template Pattern(CRTP) in C++ is definitely a powerful technique &amp;amp; static alternative to virtual functions. But at the same time, learning it may seem a bit weird at first. If you are like me who struggled to grasp anything in one go. Then this article might help you to provide a thought process on where CRTP fits in day-to-day coding. And, if you are an Embedded Programmer, you may run into CRTP more often.</description>
    </item>
  </channel>
</rss>
