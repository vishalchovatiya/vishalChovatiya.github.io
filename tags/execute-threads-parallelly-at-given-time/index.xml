<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Execute-Threads-Parallelly-at-Given-Time on Vishal Chovatiya</title>
    <link>http://localhost:1313/tags/execute-threads-parallelly-at-given-time/</link>
    <description>Recent content in Execute-Threads-Parallelly-at-Given-Time on Vishal Chovatiya</description>
    <image>
      <title>Vishal Chovatiya</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.128.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 10 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/execute-threads-parallelly-at-given-time/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Execute Threads Parallelly at Given Time: pthread_barrier_t</title>
      <link>http://localhost:1313/posts/execute-threads-parallelly-at-given-time-pthread_barrier_t/</link>
      <pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/execute-threads-parallelly-at-given-time-pthread_barrier_t/</guid>
      <description>Why we need pthread_barrier_t? When multiple threads are working together, it might be required that the threads wait for each other at a certain event or point in the program before proceeding ahead. Let us say we have four threads, each of which is going to initialize a global variable. The 4 variables, in turn, might be used by all the four threads. Thus it would be feasible that all the threads wait for each other to finish the initialization of the variables before proceeding.</description>
    </item>
  </channel>
</rss>
