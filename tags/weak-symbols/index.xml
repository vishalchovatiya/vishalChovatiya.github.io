<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Weak-Symbols on Vishal Chovatiya</title>
    <link>https://vishalchovatiya.github.io/tags/weak-symbols/</link>
    <description>Recent content in Weak-Symbols on Vishal Chovatiya</description>
    <image>
      <title>Vishal Chovatiya</title>
      <url>https://vishalchovatiya.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://vishalchovatiya.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.128.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vishalchovatiya.github.io/tags/weak-symbols/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Default Handlers in C: weak_alias</title>
      <link>https://vishalchovatiya.github.io/posts/default-handlers-in-c-weak_alias/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://vishalchovatiya.github.io/posts/default-handlers-in-c-weak_alias/</guid>
      <description>Default Handlers in C: weak_alias function tells the linker that new is to be a weak alias forÂ old. That is, this definition of new is a weak symbol. If there is no other definition of a symbol called new, this old definition stands.
Might seems alien to you first, so go through a below example &amp;amp; read again.
Definition of weak_alias is as follows : 1 2 #define weak_alias(old, new) \ extern __typeof(old) new __attribute__((weak, alias(#old))) If there is another (non-weak) definition of new then that non-weak(i.</description>
    </item>
  </channel>
</rss>
