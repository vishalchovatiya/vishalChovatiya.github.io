<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>What-Problems-Can-the-Interpreter-Design-Pattern-Solve on Vishal Chovatiya</title>
    <link>https://vishalchovatiya.github.io/tags/what-problems-can-the-interpreter-design-pattern-solve/</link>
    <description>Recent content in What-Problems-Can-the-Interpreter-Design-Pattern-Solve on Vishal Chovatiya</description>
    <image>
      <title>Vishal Chovatiya</title>
      <url>https://vishalchovatiya.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://vishalchovatiya.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.128.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 03 Apr 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vishalchovatiya.github.io/tags/what-problems-can-the-interpreter-design-pattern-solve/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interpreter Design Pattern in Modern C&#43;&#43;</title>
      <link>https://vishalchovatiya.github.io/posts/interpreter-design-pattern-in-modern-cpp/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://vishalchovatiya.github.io/posts/interpreter-design-pattern-in-modern-cpp/</guid>
      <description>Interpreter Design Pattern is a Behavioural Design Pattern which is a component that processes structured text data by turning it into separate lexical tokens(lexing) and then interpreting sequences of tokens(parsing). In this article, we will see the Interpreter Design Pattern in Modern C++.
By the way, If you haven’t check out my other articles on Behavioural Design Patterns, then here is the list:
Chain of responsibility Command Interpreter Iterator Mediator Memento Observer State Strategy Template Method Visitor The code snippets you see throughout this series of articles are simplified not sophisticated.</description>
    </item>
  </channel>
</rss>
