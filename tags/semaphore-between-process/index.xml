<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Semaphore-Between-Process on Vishal Chovatiya</title>
    <link>http://localhost:1313/tags/semaphore-between-process/</link>
    <description>Recent content in Semaphore-Between-Process on Vishal Chovatiya</description>
    <image>
      <title>Vishal Chovatiya</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.128.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 10 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/semaphore-between-process/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Semaphore between processes example in C</title>
      <link>http://localhost:1313/posts/semaphore-between-processes-example-in-c/</link>
      <pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/semaphore-between-processes-example-in-c/</guid>
      <description>Semaphore is a synchronization mechanism. In more words, semaphores are a technique for coordinating or synchronizing activities in which multiple processes compete for the same resources. There are 2 types of semaphores: Binary semaphores &amp;amp; Counting semaphores. Binary Semaphores: Only two states 0 &amp;amp; 1, i.e., locked/unlocked or available/unavailable, Mutex implementation. Counting Semaphores: Semaphores which allow arbitrary resource count called counting semaphores. Here, we will see the POSIX style semaphore. POSIX semaphore calls are much simpler than the System V semaphore calls.</description>
    </item>
  </channel>
</rss>
